{"version":3,"sources":["Magikeys.ts"],"names":[],"mappings":"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","file":"Magikeys.js","sourceRoot":"../src","sourcesContent":["interface Options {\n    num_keys?: Boolean\n    event_name?: String\n    exclude?: Array<string>\n    context?: Document|Element|String\n    timeout?: Number\n}\n\nclass Magikeys {\n\n    public expected: Array<string|number>\n\n    public callback: Function\n\n    public options: Options\n\n    private _listened: boolean\n\n    private _sequence: Array<string|number>\n\n    private _charCount: number\n\n    /**\n     * @returns {{\n     *      num_keys: boolean,\n     *      event_name: string,\n     *      exclude: string[]\n     *      context: Document|Element|String,\n     *      timeout: Number\n     * }}\n     * @private\n     */\n    static get _DEFAULT_OPTIONS() {\n        return {\n            num_keys: false,\n            event_name: 'keyup',\n            exclude: ['input', 'textarea'],\n            context: document,\n            timeout: 2000\n        }\n    }\n\n    /**\n     * @constructor\n     * @param {Array|String} expected\n     * @param {Function} cb\n     * @param {Object} options\n     * @param {Boolean} options.num_keys\n     * @param {String} options.event_name\n     * @param {String[]} options.exclude\n     * @param {Document|Element|String} options.context\n     * @param {Number} options.timeout\n     */\n    constructor(expected: String|(String|Number)[], cb: Function, options: Options = {}) {\n        expected.constructor === String && (expected = (<string>expected).split(''))\n        this.expected = <(string|number)[]>expected\n        this.callback = cb\n        this.options = {...Magikeys._DEFAULT_OPTIONS, ...options}\n        this._listened = false\n\n        this._init()\n        this.run().listen()\n    }\n\n    /**\n     * @param {Array|String} expected\n     * @param {Function} cb\n     * @param {Object} options\n     * @param {Boolean} options.num_keys\n     * @param {String} options.event_name\n     * @param {String[]} options.exclude\n     * @param {Document|Element|String} options.context\n     * @param {Number} options.timeout\n     * @return {Magikeys}\n     */\n    static create(expected: String|(String|Number)[], cb: Function, options: Options): Magikeys {\n        return new Magikeys(expected, cb, options)\n    }\n\n    /**\n     * Add sequence event listener on context\n     *\n     * @return {Magikeys}\n     */\n    run(): Magikeys {\n        try {\n            this._getContext().addEventListener(\n                this.options.event_name as string,\n                this._handler.bind(this)\n            )\n        } catch(e) {\n            console.error(e)\n        }\n        return this\n    }\n\n    /**\n     * Trigger callback\n     *\n     * @return {Function}\n     */\n    trigger(): Function {\n        return this.callback(this.expected)\n    }\n\n    /**\n     * Destroy sequence event listener on context\n     *\n     * @return {Magikeys}\n     */\n    destroy(): Magikeys {\n        try {\n            this._getContext().removeEventListener(\n                this.options.event_name as string,\n                this._handler.bind(this)\n            )\n        } catch(e) {\n            console.error(e)\n        }\n        return this\n    }\n\n    /**\n     * Listen sequence\n     *\n     * @return {Magikeys}\n     */\n    listen(): Magikeys {\n        this._listened = true\n        return this\n    }\n\n    /**\n     * Mute and prevent  sequence\n     *\n     * @return {Magikeys}\n     */\n    mute(): Magikeys {\n        this._listened = false\n        return this\n    }\n\n    /**\n     * @return {Boolean}\n     */\n    isListened(): Boolean {\n        return this._listened === true\n    }\n\n    /**\n     * @return {Boolean}\n     */\n    isMuted() {\n        return !this.isListened()\n    }\n\n    _init() {\n        this._sequence = []\n        this._charCount = 0\n    }\n\n    /**\n     * @param {Element|null} element\n     * @return {Boolean}\n     */\n    _excluded(element: Element|null): Boolean {\n        if (!element) return true\n        return this.options.exclude.some((item: string) => {\n            const {classList, id, tagName} = element\n            return !item || (\n                (item.startsWith('.') && classList.contains(item)) ||\n                (item.startsWith('#') && id === item.replace('#', '')) ||\n                (/^.+?\\[.+\\]?$/g.test(item) && this._getContext().querySelector(item) === element) ||\n                (/^[a-zA-Z]+$/gi.test(item) && tagName.toLowerCase() === item.toLowerCase())\n            )\n        })\n    }\n\n    /**\n     * @returns {Element|Document}\n     * @private\n     */\n    _getContext(): Element|Document {\n        const _ctx = this.options.context\n        if (_ctx.constructor === String)\n            return this._getContext().querySelector(_ctx as string) || document\n\n        const nodeType = (<Element|Document>_ctx).nodeType as number\n        if (nodeType && nodeType === Node.ELEMENT_NODE)\n            return <Element|Document>_ctx\n\n        return document\n    }\n\n    /**\n     *\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _handler(e) {\n        if (this._excluded(e.target || e.srcElement)) return\n\n        if (!document.hasFocus() || !this._listened) {\n            this._init()\n            return\n        }\n\n        let key = this.options.num_keys ? (e.keyCode || e.which) : e.key as string\n        this._charCount++\n        this._sequence.push(key)\n\n        if (this._charCount === this.expected.length || this.expected.indexOf(key) < 0) {\n            if (JSON.stringify(this._sequence) === JSON.stringify(this.expected) && this.callback.constructor === Function)\n                this.trigger()\n\n            this._init()\n        }\n    }\n\n}\n\n(<any>window).Magikeys = Magikeys\n"]}